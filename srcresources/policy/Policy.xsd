<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:na="http://www.cyznj.com/nature" targetNamespace="http://www.cyznj.com/nature"
        elementFormDefault="unqualified">
    <element name="policyDefinition">
        <complexType>
            <sequence>
                <element name="conditions" type="na:ConditionEntries"/>
                <element name="actions" type="na:ActionEntries"/>
            </sequence>
        </complexType>
    </element>
    <complexType name="ActionEntries">
        <sequence>
            <element name="actionEntry" type="na:ActionEntry" minOccurs="0" maxOccurs="unbounded"/>
        </sequence>
    </complexType>

    <complexType name="ConditionEntries">
        <sequence>
            <element name="conditionEntry" type="na:ConditionEntry" minOccurs="0" maxOccurs="unbounded"/>
        </sequence>
    </complexType>


    <complexType name="ActionEntry">
        <sequence>
            <element name="classPath">
                <simpleType>
                    <restriction base="string">
                        <pattern value="policy.impl.*"/>
                    </restriction>
                </simpleType>
            </element>
            <element name="parameter" type="na:Parameter" minOccurs="0" maxOccurs="unbounded"/>
            <element name="description" type="string"/>
        </sequence>
        <attribute name="id" type="ID"/>
    </complexType>

    <complexType name="ConditionEntry">
        <sequence>
            <!--用来描述condition中用到的表达式，目前我们采用FEL表达式语法，参考 https://code.google.com/p/fast-el/ -->
            <element name="expression" type="string"/>
            <!--用来描述condition中表达式用到的变量上下文token，有些是需要参数来自于前台任务，有些是系统管理元设置-->
            <element name="parameter" type="na:Parameter" minOccurs="0" maxOccurs="unbounded"/>
            <element name="description" type="string"/>
        </sequence>
        <attribute name="id" type="string"/>
    </complexType>

    <complexType name="Parameter">
        <sequence>
            <!-- 要采用命名空间的做法，采用父名称+点的形式,否则在多个PolicyCondition共享PolicyContext中上下文参数有命名冲突 -->
            <element name="name" type="string"/>
            <element name="default" type="string"/>
            <!--参数的类型，需要在表达式式运算中进行转化-->
            <element name="dataType">
                <simpleType>
                    <restriction base="string">
                        <!--日期型暂时需要用函数来比较，因为逻辑运算不支持直接比较 -->
                        <enumeration value="int"/>
                        <enumeration value="string"/>
                        <enumeration value="long"/>
                        <enumeration value="float"/>
                        <enumeration value="boolean"/>
                    </restriction>
                </simpleType>
            </element>
        </sequence>
    </complexType>

</schema>
